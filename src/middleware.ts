// middleware.ts
import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";

export function middleware(request: NextRequest) {
  console.log("üî• Middleware running for:", request.nextUrl.pathname);

  // –ï—Å–ª–∏ —É–∂–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞ –∏ –µ—Å—Ç—å –∫—É–∫–∞ - —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
  if (request.nextUrl.pathname === "/login") {
    const authCookie = request.cookies.get("is-authenticated");
    if (authCookie?.value) {
      return NextResponse.redirect(new URL("/", request.url));
    }
    return NextResponse.next();
  }

  // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ä–æ—É—Ç–æ–≤
  const authCookie = request.cookies.get("is-authenticated");
  if (!authCookie?.value) {
    return NextResponse.redirect(new URL("/login", request.url));
  }

  return NextResponse.next(); // –í–∞–∂–Ω–æ! –ë–µ–∑ —ç—Ç–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è
}

export const config = {
  matcher: [
    /*
     * Match all request paths except:
     * - api routes (–¥–ª—è —Ç–≤–æ–µ–π –∞–ø–∏—à–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
     * - login (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞)
     * - _next (—Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã Next.js)
     * - favicon.ico, images, etc (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã)
     */
    "/((?!api|login|_next/static|_next/image|favicon.ico|.*\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)",
  ],
};
